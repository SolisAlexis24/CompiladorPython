
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'DleftMASMENOSleftPORDIVIDEleftPOTENCIAAND ASIGNA DIFERENTE DIVIDE ENTERO ID IGUAL LlaveD LlaveI MAS MAYOR MAYORIG MENOR MENORIG MENOS NOT OR POR POTENCIA ParD ParI PyC bool else false if int main return trueempty :P : int main LlaveI C return ENTERO PyC LlaveDC : D\n         | emptyD : int ID PyC C\n         | int ID ASIGNA E PyC C\n         | ID ASIGNA E PyC C E : E MAS T\n         | E MENOS TE : TT : T POR F\n         | T DIVIDE FT : FF : F POTENCIA HF : HH : ParI E ParDH : IDH : ENTERO'
    
_lr_action_items = {'int':([0,6,19,26,],[2,2,2,2,]),'ID':([0,2,5,6,7,13,19,20,21,22,23,24,26,],[3,4,8,3,8,8,3,8,8,8,8,8,3,]),'$end':([1,6,15,16,17,19,26,27,34,],[0,-1,-5,-3,-4,-1,-1,-7,-6,]),'ASIGNA':([3,4,],[5,7,]),'PyC':([4,8,9,10,11,12,14,18,28,29,30,31,32,33,],[6,-17,19,-10,-13,-15,-18,26,-8,-9,-11,-12,-14,-16,]),'ParI':([5,7,13,20,21,22,23,24,],[13,13,13,13,13,13,13,13,]),'ENTERO':([5,7,13,20,21,22,23,24,],[14,14,14,14,14,14,14,14,]),'POTENCIA':([8,11,12,14,30,31,32,33,],[-17,24,-15,-18,24,24,-14,-16,]),'POR':([8,10,11,12,14,28,29,30,31,32,33,],[-17,22,-13,-15,-18,22,22,-11,-12,-14,-16,]),'DIVIDE':([8,10,11,12,14,28,29,30,31,32,33,],[-17,23,-13,-15,-18,23,23,-11,-12,-14,-16,]),'MAS':([8,9,10,11,12,14,18,25,28,29,30,31,32,33,],[-17,20,-10,-13,-15,-18,20,20,-8,-9,-11,-12,-14,-16,]),'MENOS':([8,9,10,11,12,14,18,25,28,29,30,31,32,33,],[-17,21,-10,-13,-15,-18,21,21,-8,-9,-11,-12,-14,-16,]),'ParD':([8,10,11,12,14,25,28,29,30,31,32,33,],[-17,-10,-13,-15,-18,33,-8,-9,-11,-12,-14,-16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'D':([0,6,19,26,],[1,16,16,16,]),'E':([5,7,13,],[9,18,25,]),'T':([5,7,13,20,21,],[10,10,10,28,29,]),'F':([5,7,13,20,21,22,23,],[11,11,11,11,11,30,31,]),'H':([5,7,13,20,21,22,23,24,],[12,12,12,12,12,12,12,32,]),'C':([6,19,26,],[15,27,34,]),'empty':([6,19,26,],[17,17,17,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> D","S'",1,None,None,None),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',19),
  ('P -> int main LlaveI C return ENTERO PyC LlaveD','P',8,'p_P_program','parser.py',24),
  ('C -> D','C',1,'p_C_code','parser.py',30),
  ('C -> empty','C',1,'p_C_code','parser.py',31),
  ('D -> int ID PyC C','D',4,'p_D_integer_dec','parser.py',35),
  ('D -> int ID ASIGNA E PyC C','D',6,'p_D_integer_dec','parser.py',36),
  ('D -> ID ASIGNA E PyC C','D',5,'p_D_integer_dec','parser.py',37),
  ('E -> E MAS T','E',3,'p_E_arith','parser.py',49),
  ('E -> E MENOS T','E',3,'p_E_arith','parser.py',50),
  ('E -> T','E',1,'p_E_goT','parser.py',56),
  ('T -> T POR F','T',3,'p_T_arith','parser.py',61),
  ('T -> T DIVIDE F','T',3,'p_T_arith','parser.py',62),
  ('T -> F','T',1,'p_T_goF','parser.py',68),
  ('F -> F POTENCIA H','F',3,'p_F_arith','parser.py',73),
  ('F -> H','F',1,'p_F_goH','parser.py',78),
  ('H -> ParI E ParD','H',3,'p_H_goback','parser.py',83),
  ('H -> ID','H',1,'p_H_idname','parser.py',87),
  ('H -> ENTERO','H',1,'p_H_integer','parser.py',96),
]
