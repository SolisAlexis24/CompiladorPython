Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    DIFERENTE
    IGUAL
    MAYOR
    MAYORIG
    MENOR
    MENORIG
    NOT
    OR
    bool
    else
    false
    if
    true

Grammar

Rule 0     S' -> P
Rule 1     empty -> <empty>
Rule 2     P -> int main LlaveI C return ENTERO PyC LlaveD
Rule 3     C -> D
Rule 4     C -> empty
Rule 5     D -> int ID PyC C
Rule 6     D -> int ID ASIGNA E PyC C
Rule 7     D -> ID ASIGNA E PyC C
Rule 8     E -> E MAS T
Rule 9     E -> E MENOS T
Rule 10    E -> T
Rule 11    T -> T POR F
Rule 12    T -> T DIVIDE F
Rule 13    T -> F
Rule 14    F -> F POTENCIA H
Rule 15    F -> H
Rule 16    H -> ParI E ParD
Rule 17    H -> ID
Rule 18    H -> ENTERO

Terminals, with rules where they appear

AND                  : 
ASIGNA               : 6 7
DIFERENTE            : 
DIVIDE               : 12
ENTERO               : 2 18
ID                   : 5 6 7 17
IGUAL                : 
LlaveD               : 2
LlaveI               : 2
MAS                  : 8
MAYOR                : 
MAYORIG              : 
MENOR                : 
MENORIG              : 
MENOS                : 9
NOT                  : 
OR                   : 
POR                  : 11
POTENCIA             : 14
ParD                 : 16
ParI                 : 16
PyC                  : 2 5 6 7
bool                 : 
else                 : 
error                : 
false                : 
if                   : 
int                  : 2 5 6
main                 : 2
return               : 2
true                 : 

Nonterminals, with rules where they appear

C                    : 2 5 6 7
D                    : 3
E                    : 6 7 8 9 16
F                    : 11 12 13 14
H                    : 14 15
P                    : 0
T                    : 8 9 10 11 12
empty                : 4

Parsing method: LALR

state 0

    (0) S' -> . P
    (2) P -> . int main LlaveI C return ENTERO PyC LlaveD

    int             shift and go to state 2

    P                              shift and go to state 1

state 1

    (0) S' -> P .



state 2

    (2) P -> int . main LlaveI C return ENTERO PyC LlaveD

    main            shift and go to state 3


state 3

    (2) P -> int main . LlaveI C return ENTERO PyC LlaveD

    LlaveI          shift and go to state 4


state 4

    (2) P -> int main LlaveI . C return ENTERO PyC LlaveD
    (3) C -> . D
    (4) C -> . empty
    (5) D -> . int ID PyC C
    (6) D -> . int ID ASIGNA E PyC C
    (7) D -> . ID ASIGNA E PyC C
    (1) empty -> .

    int             shift and go to state 5
    ID              shift and go to state 9
    return          reduce using rule 1 (empty -> .)

    C                              shift and go to state 6
    D                              shift and go to state 7
    empty                          shift and go to state 8

state 5

    (5) D -> int . ID PyC C
    (6) D -> int . ID ASIGNA E PyC C

    ID              shift and go to state 10


state 6

    (2) P -> int main LlaveI C . return ENTERO PyC LlaveD

    return          shift and go to state 11


state 7

    (3) C -> D .

    return          reduce using rule 3 (C -> D .)


state 8

    (4) C -> empty .

    return          reduce using rule 4 (C -> empty .)


state 9

    (7) D -> ID . ASIGNA E PyC C

    ASIGNA          shift and go to state 12


state 10

    (5) D -> int ID . PyC C
    (6) D -> int ID . ASIGNA E PyC C

    PyC             shift and go to state 13
    ASIGNA          shift and go to state 14


state 11

    (2) P -> int main LlaveI C return . ENTERO PyC LlaveD

    ENTERO          shift and go to state 15


state 12

    (7) D -> ID ASIGNA . E PyC C
    (8) E -> . E MAS T
    (9) E -> . E MENOS T
    (10) E -> . T
    (11) T -> . T POR F
    (12) T -> . T DIVIDE F
    (13) T -> . F
    (14) F -> . F POTENCIA H
    (15) F -> . H
    (16) H -> . ParI E ParD
    (17) H -> . ID
    (18) H -> . ENTERO

    ParI            shift and go to state 21
    ID              shift and go to state 16
    ENTERO          shift and go to state 22

    E                              shift and go to state 17
    T                              shift and go to state 18
    F                              shift and go to state 19
    H                              shift and go to state 20

state 13

    (5) D -> int ID PyC . C
    (3) C -> . D
    (4) C -> . empty
    (5) D -> . int ID PyC C
    (6) D -> . int ID ASIGNA E PyC C
    (7) D -> . ID ASIGNA E PyC C
    (1) empty -> .

    int             shift and go to state 5
    ID              shift and go to state 9
    return          reduce using rule 1 (empty -> .)

    C                              shift and go to state 23
    D                              shift and go to state 7
    empty                          shift and go to state 8

state 14

    (6) D -> int ID ASIGNA . E PyC C
    (8) E -> . E MAS T
    (9) E -> . E MENOS T
    (10) E -> . T
    (11) T -> . T POR F
    (12) T -> . T DIVIDE F
    (13) T -> . F
    (14) F -> . F POTENCIA H
    (15) F -> . H
    (16) H -> . ParI E ParD
    (17) H -> . ID
    (18) H -> . ENTERO

    ParI            shift and go to state 21
    ID              shift and go to state 16
    ENTERO          shift and go to state 22

    E                              shift and go to state 24
    T                              shift and go to state 18
    F                              shift and go to state 19
    H                              shift and go to state 20

state 15

    (2) P -> int main LlaveI C return ENTERO . PyC LlaveD

    PyC             shift and go to state 25


state 16

    (17) H -> ID .

    POTENCIA        reduce using rule 17 (H -> ID .)
    POR             reduce using rule 17 (H -> ID .)
    DIVIDE          reduce using rule 17 (H -> ID .)
    PyC             reduce using rule 17 (H -> ID .)
    MAS             reduce using rule 17 (H -> ID .)
    MENOS           reduce using rule 17 (H -> ID .)
    ParD            reduce using rule 17 (H -> ID .)


state 17

    (7) D -> ID ASIGNA E . PyC C
    (8) E -> E . MAS T
    (9) E -> E . MENOS T

    PyC             shift and go to state 26
    MAS             shift and go to state 27
    MENOS           shift and go to state 28


state 18

    (10) E -> T .
    (11) T -> T . POR F
    (12) T -> T . DIVIDE F

    PyC             reduce using rule 10 (E -> T .)
    MAS             reduce using rule 10 (E -> T .)
    MENOS           reduce using rule 10 (E -> T .)
    ParD            reduce using rule 10 (E -> T .)
    POR             shift and go to state 29
    DIVIDE          shift and go to state 30


state 19

    (13) T -> F .
    (14) F -> F . POTENCIA H

    POR             reduce using rule 13 (T -> F .)
    DIVIDE          reduce using rule 13 (T -> F .)
    PyC             reduce using rule 13 (T -> F .)
    MAS             reduce using rule 13 (T -> F .)
    MENOS           reduce using rule 13 (T -> F .)
    ParD            reduce using rule 13 (T -> F .)
    POTENCIA        shift and go to state 31


state 20

    (15) F -> H .

    POTENCIA        reduce using rule 15 (F -> H .)
    POR             reduce using rule 15 (F -> H .)
    DIVIDE          reduce using rule 15 (F -> H .)
    PyC             reduce using rule 15 (F -> H .)
    MAS             reduce using rule 15 (F -> H .)
    MENOS           reduce using rule 15 (F -> H .)
    ParD            reduce using rule 15 (F -> H .)


state 21

    (16) H -> ParI . E ParD
    (8) E -> . E MAS T
    (9) E -> . E MENOS T
    (10) E -> . T
    (11) T -> . T POR F
    (12) T -> . T DIVIDE F
    (13) T -> . F
    (14) F -> . F POTENCIA H
    (15) F -> . H
    (16) H -> . ParI E ParD
    (17) H -> . ID
    (18) H -> . ENTERO

    ParI            shift and go to state 21
    ID              shift and go to state 16
    ENTERO          shift and go to state 22

    E                              shift and go to state 32
    T                              shift and go to state 18
    F                              shift and go to state 19
    H                              shift and go to state 20

state 22

    (18) H -> ENTERO .

    POTENCIA        reduce using rule 18 (H -> ENTERO .)
    POR             reduce using rule 18 (H -> ENTERO .)
    DIVIDE          reduce using rule 18 (H -> ENTERO .)
    PyC             reduce using rule 18 (H -> ENTERO .)
    MAS             reduce using rule 18 (H -> ENTERO .)
    MENOS           reduce using rule 18 (H -> ENTERO .)
    ParD            reduce using rule 18 (H -> ENTERO .)


state 23

    (5) D -> int ID PyC C .

    return          reduce using rule 5 (D -> int ID PyC C .)


state 24

    (6) D -> int ID ASIGNA E . PyC C
    (8) E -> E . MAS T
    (9) E -> E . MENOS T

    PyC             shift and go to state 33
    MAS             shift and go to state 27
    MENOS           shift and go to state 28


state 25

    (2) P -> int main LlaveI C return ENTERO PyC . LlaveD

    LlaveD          shift and go to state 34


state 26

    (7) D -> ID ASIGNA E PyC . C
    (3) C -> . D
    (4) C -> . empty
    (5) D -> . int ID PyC C
    (6) D -> . int ID ASIGNA E PyC C
    (7) D -> . ID ASIGNA E PyC C
    (1) empty -> .

    int             shift and go to state 5
    ID              shift and go to state 9
    return          reduce using rule 1 (empty -> .)

    C                              shift and go to state 35
    D                              shift and go to state 7
    empty                          shift and go to state 8

state 27

    (8) E -> E MAS . T
    (11) T -> . T POR F
    (12) T -> . T DIVIDE F
    (13) T -> . F
    (14) F -> . F POTENCIA H
    (15) F -> . H
    (16) H -> . ParI E ParD
    (17) H -> . ID
    (18) H -> . ENTERO

    ParI            shift and go to state 21
    ID              shift and go to state 16
    ENTERO          shift and go to state 22

    T                              shift and go to state 36
    F                              shift and go to state 19
    H                              shift and go to state 20

state 28

    (9) E -> E MENOS . T
    (11) T -> . T POR F
    (12) T -> . T DIVIDE F
    (13) T -> . F
    (14) F -> . F POTENCIA H
    (15) F -> . H
    (16) H -> . ParI E ParD
    (17) H -> . ID
    (18) H -> . ENTERO

    ParI            shift and go to state 21
    ID              shift and go to state 16
    ENTERO          shift and go to state 22

    T                              shift and go to state 37
    F                              shift and go to state 19
    H                              shift and go to state 20

state 29

    (11) T -> T POR . F
    (14) F -> . F POTENCIA H
    (15) F -> . H
    (16) H -> . ParI E ParD
    (17) H -> . ID
    (18) H -> . ENTERO

    ParI            shift and go to state 21
    ID              shift and go to state 16
    ENTERO          shift and go to state 22

    F                              shift and go to state 38
    H                              shift and go to state 20

state 30

    (12) T -> T DIVIDE . F
    (14) F -> . F POTENCIA H
    (15) F -> . H
    (16) H -> . ParI E ParD
    (17) H -> . ID
    (18) H -> . ENTERO

    ParI            shift and go to state 21
    ID              shift and go to state 16
    ENTERO          shift and go to state 22

    F                              shift and go to state 39
    H                              shift and go to state 20

state 31

    (14) F -> F POTENCIA . H
    (16) H -> . ParI E ParD
    (17) H -> . ID
    (18) H -> . ENTERO

    ParI            shift and go to state 21
    ID              shift and go to state 16
    ENTERO          shift and go to state 22

    H                              shift and go to state 40

state 32

    (16) H -> ParI E . ParD
    (8) E -> E . MAS T
    (9) E -> E . MENOS T

    ParD            shift and go to state 41
    MAS             shift and go to state 27
    MENOS           shift and go to state 28


state 33

    (6) D -> int ID ASIGNA E PyC . C
    (3) C -> . D
    (4) C -> . empty
    (5) D -> . int ID PyC C
    (6) D -> . int ID ASIGNA E PyC C
    (7) D -> . ID ASIGNA E PyC C
    (1) empty -> .

    int             shift and go to state 5
    ID              shift and go to state 9
    return          reduce using rule 1 (empty -> .)

    C                              shift and go to state 42
    D                              shift and go to state 7
    empty                          shift and go to state 8

state 34

    (2) P -> int main LlaveI C return ENTERO PyC LlaveD .

    $end            reduce using rule 2 (P -> int main LlaveI C return ENTERO PyC LlaveD .)


state 35

    (7) D -> ID ASIGNA E PyC C .

    return          reduce using rule 7 (D -> ID ASIGNA E PyC C .)


state 36

    (8) E -> E MAS T .
    (11) T -> T . POR F
    (12) T -> T . DIVIDE F

    PyC             reduce using rule 8 (E -> E MAS T .)
    MAS             reduce using rule 8 (E -> E MAS T .)
    MENOS           reduce using rule 8 (E -> E MAS T .)
    ParD            reduce using rule 8 (E -> E MAS T .)
    POR             shift and go to state 29
    DIVIDE          shift and go to state 30


state 37

    (9) E -> E MENOS T .
    (11) T -> T . POR F
    (12) T -> T . DIVIDE F

    PyC             reduce using rule 9 (E -> E MENOS T .)
    MAS             reduce using rule 9 (E -> E MENOS T .)
    MENOS           reduce using rule 9 (E -> E MENOS T .)
    ParD            reduce using rule 9 (E -> E MENOS T .)
    POR             shift and go to state 29
    DIVIDE          shift and go to state 30


state 38

    (11) T -> T POR F .
    (14) F -> F . POTENCIA H

    POR             reduce using rule 11 (T -> T POR F .)
    DIVIDE          reduce using rule 11 (T -> T POR F .)
    PyC             reduce using rule 11 (T -> T POR F .)
    MAS             reduce using rule 11 (T -> T POR F .)
    MENOS           reduce using rule 11 (T -> T POR F .)
    ParD            reduce using rule 11 (T -> T POR F .)
    POTENCIA        shift and go to state 31


state 39

    (12) T -> T DIVIDE F .
    (14) F -> F . POTENCIA H

    POR             reduce using rule 12 (T -> T DIVIDE F .)
    DIVIDE          reduce using rule 12 (T -> T DIVIDE F .)
    PyC             reduce using rule 12 (T -> T DIVIDE F .)
    MAS             reduce using rule 12 (T -> T DIVIDE F .)
    MENOS           reduce using rule 12 (T -> T DIVIDE F .)
    ParD            reduce using rule 12 (T -> T DIVIDE F .)
    POTENCIA        shift and go to state 31


state 40

    (14) F -> F POTENCIA H .

    POTENCIA        reduce using rule 14 (F -> F POTENCIA H .)
    POR             reduce using rule 14 (F -> F POTENCIA H .)
    DIVIDE          reduce using rule 14 (F -> F POTENCIA H .)
    PyC             reduce using rule 14 (F -> F POTENCIA H .)
    MAS             reduce using rule 14 (F -> F POTENCIA H .)
    MENOS           reduce using rule 14 (F -> F POTENCIA H .)
    ParD            reduce using rule 14 (F -> F POTENCIA H .)


state 41

    (16) H -> ParI E ParD .

    POTENCIA        reduce using rule 16 (H -> ParI E ParD .)
    POR             reduce using rule 16 (H -> ParI E ParD .)
    DIVIDE          reduce using rule 16 (H -> ParI E ParD .)
    PyC             reduce using rule 16 (H -> ParI E ParD .)
    MAS             reduce using rule 16 (H -> ParI E ParD .)
    MENOS           reduce using rule 16 (H -> ParI E ParD .)
    ParD            reduce using rule 16 (H -> ParI E ParD .)


state 42

    (6) D -> int ID ASIGNA E PyC C .

    return          reduce using rule 6 (D -> int ID ASIGNA E PyC C .)

